# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main_dockwidget.ui'
#
# Created by: PyQt5 UI code generator 5.14.1
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainDockWidget(object):
    def setupUi(self, MainDockWidget):
        MainDockWidget.setObjectName("MainDockWidget")
        MainDockWidget.resize(370, 590)
        MainDockWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        MainDockWidget.setStyleSheet("QToolBox:tab {\n"
"    font: bold 10pt ;\n"
"    color: Grey;\n"
"}\n"
"QToolBox:tab:selected {\n"
"    font: bold 10pt ;\n"
"    color: black;\n"
"}\n"
"QGroupBox::title {\n"
"    font: bold italic 8pt ;\n"
"    color: black;\n"
"}\n"
"QPushButton::flat{\n"
"background-color: none;\n"
"border: 0;\n"
"border-style:none;\n"
"border-color: blue;\n"
"border-width: 0px;\n"
"border-radius: 0px;\n"
"padding:2px;\n"
"}\n"
"QPushButton::flat:hover{\n"
"background-color: azure;\n"
"border-style:solid;\n"
"border-color: royalblue;\n"
"border-width: 1px;\n"
"border-radius: 0px;\n"
"padding: 2px;\n"
"}\n"
"QPushButton::flat:pressed{\n"
"background-color: powderblue;\n"
"border-style:solid;\n"
"border-color: royalblue;\n"
"border-width: 1px;\n"
"border-radius: 0px;\n"
"padding: 2px;\n"
"}")
        MainDockWidget.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        MainDockWidget.setAllowedAreas(QtCore.Qt.AllDockWidgetAreas)
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.dockWidgetContents)
        self.verticalLayout.setObjectName("verticalLayout")
        self.tab_widget = QtWidgets.QTabWidget(self.dockWidgetContents)
        self.tab_widget.setToolTip("")
        self.tab_widget.setAutoFillBackground(False)
        self.tab_widget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tab_widget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tab_widget.setElideMode(QtCore.Qt.ElideNone)
        self.tab_widget.setObjectName("tab_widget")
        self.inputdata_tab = QtWidgets.QWidget()
        self.inputdata_tab.setObjectName("inputdata_tab")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.inputdata_tab)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSpacing(6)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.inputdata_tab)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.layer_combo = QgsMapLayerComboBox(self.inputdata_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.layer_combo.sizePolicy().hasHeightForWidth())
        self.layer_combo.setSizePolicy(sizePolicy)
        self.layer_combo.setMinimumSize(QtCore.QSize(0, 0))
        self.layer_combo.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.layer_combo.setEditable(False)
        self.layer_combo.setCurrentText("")
        self.layer_combo.setShowCrs(True)
        self.layer_combo.setObjectName("layer_combo")
        self.horizontalLayout.addWidget(self.layer_combo)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.import_csv_button = QtWidgets.QPushButton(self.inputdata_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.import_csv_button.sizePolicy().hasHeightForWidth())
        self.import_csv_button.setSizePolicy(sizePolicy)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/20190619_iconset_mob_wborders_load_1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.import_csv_button.setIcon(icon)
        self.import_csv_button.setObjectName("import_csv_button")
        self.horizontalLayout.addWidget(self.import_csv_button)
        self.verticalLayout_3.addLayout(self.horizontalLayout)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setSpacing(6)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.label_7 = QtWidgets.QLabel(self.inputdata_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
        self.label_7.setSizePolicy(sizePolicy)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_9.addWidget(self.label_7)
        self.label_field_combo = QtWidgets.QComboBox(self.inputdata_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_field_combo.sizePolicy().hasHeightForWidth())
        self.label_field_combo.setSizePolicy(sizePolicy)
        self.label_field_combo.setObjectName("label_field_combo")
        self.horizontalLayout_9.addWidget(self.label_field_combo)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem1)
        self.label_4 = QtWidgets.QLabel(self.inputdata_tab)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_9.addWidget(self.label_4)
        self.encoding_combo = QtWidgets.QComboBox(self.inputdata_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.encoding_combo.sizePolicy().hasHeightForWidth())
        self.encoding_combo.setSizePolicy(sizePolicy)
        self.encoding_combo.setObjectName("encoding_combo")
        self.horizontalLayout_9.addWidget(self.encoding_combo)
        self.horizontalLayout_8.addLayout(self.horizontalLayout_9)
        self.verticalLayout_3.addLayout(self.horizontalLayout_8)
        self.line_4 = QtWidgets.QFrame(self.inputdata_tab)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setObjectName("line_4")
        self.verticalLayout_3.addWidget(self.line_4)
        self.label_6 = QtWidgets.QLabel(self.inputdata_tab)
        self.label_6.setObjectName("label_6")
        self.verticalLayout_3.addWidget(self.label_6)
        self.frame_2 = QtWidgets.QFrame(self.inputdata_tab)
        self.frame_2.setAutoFillBackground(True)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame_2.setObjectName("frame_2")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.frame_2)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.label_3 = QtWidgets.QLabel(self.frame_2)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_12.addWidget(self.label_3)
        self.label_5 = QtWidgets.QLabel(self.frame_2)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_12.addWidget(self.label_5)
        self.verticalLayout_10.addLayout(self.horizontalLayout_12)
        self.line = QtWidgets.QFrame(self.frame_2)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout_10.addWidget(self.line)
        self.scrollArea = QtWidgets.QScrollArea(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea.sizePolicy().hasHeightForWidth())
        self.scrollArea.setSizePolicy(sizePolicy)
        self.scrollArea.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 326, 381))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setSpacing(6)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.parameter_grid = QtWidgets.QGridLayout()
        self.parameter_grid.setContentsMargins(-1, -1, -1, 12)
        self.parameter_grid.setObjectName("parameter_grid")
        self.verticalLayout_6.addLayout(self.parameter_grid)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_6.addItem(spacerItem2)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout_10.addWidget(self.scrollArea)
        self.verticalLayout_3.addWidget(self.frame_2)
        self.tab_widget.addTab(self.inputdata_tab, "")
        self.config_request_output_tab = QtWidgets.QWidget()
        self.config_request_output_tab.setObjectName("config_request_output_tab")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.config_request_output_tab)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.groupBox_2 = QtWidgets.QGroupBox(self.config_request_output_tab)
        self.groupBox_2.setAutoFillBackground(False)
        self.groupBox_2.setFlat(False)
        self.groupBox_2.setCheckable(False)
        self.groupBox_2.setChecked(False)
        self.groupBox_2.setObjectName("groupBox_2")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.groupBox_2)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.output_projection_combo = QtWidgets.QComboBox(self.groupBox_2)
        self.output_projection_combo.setObjectName("output_projection_combo")
        self.verticalLayout_8.addWidget(self.output_projection_combo)
        self.verticalLayout_5.addWidget(self.groupBox_2)
        self.groupBox = QtWidgets.QGroupBox(self.config_request_output_tab)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.use_rs_check = QtWidgets.QCheckBox(self.groupBox)
        self.use_rs_check.setChecked(True)
        self.use_rs_check.setObjectName("use_rs_check")
        self.verticalLayout_4.addWidget(self.use_rs_check)
        self.rs_error_label = QtWidgets.QLabel(self.groupBox)
        self.rs_error_label.setStyleSheet("color: red;")
        self.rs_error_label.setObjectName("rs_error_label")
        self.verticalLayout_4.addWidget(self.rs_error_label)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setContentsMargins(-1, 0, 0, -1)
        self.horizontalLayout_3.setSpacing(6)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.rs_edit = QtWidgets.QLineEdit(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rs_edit.sizePolicy().hasHeightForWidth())
        self.rs_edit.setSizePolicy(sizePolicy)
        self.rs_edit.setMinimumSize(QtCore.QSize(150, 0))
        self.rs_edit.setClearButtonEnabled(False)
        self.rs_edit.setObjectName("rs_edit")
        self.horizontalLayout_3.addWidget(self.rs_edit)
        self.rs_combo = QtWidgets.QComboBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rs_combo.sizePolicy().hasHeightForWidth())
        self.rs_combo.setSizePolicy(sizePolicy)
        self.rs_combo.setMinimumSize(QtCore.QSize(140, 0))
        self.rs_combo.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.rs_combo.setEditable(False)
        self.rs_combo.setMaxVisibleItems(17)
        self.rs_combo.setObjectName("rs_combo")
        self.horizontalLayout_3.addWidget(self.rs_combo)
        self.rsinfo_button = QtWidgets.QPushButton(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rsinfo_button.sizePolicy().hasHeightForWidth())
        self.rsinfo_button.setSizePolicy(sizePolicy)
        self.rsinfo_button.setMaximumSize(QtCore.QSize(28, 24))
        self.rsinfo_button.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("icons/20190619_iconset_mob_wborders_help_1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.rsinfo_button.setIcon(icon1)
        self.rsinfo_button.setObjectName("rsinfo_button")
        self.horizontalLayout_3.addWidget(self.rsinfo_button)
        self.verticalLayout_4.addLayout(self.horizontalLayout_3)
        self.line_2 = QtWidgets.QFrame(self.groupBox)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout_4.addWidget(self.line_2)
        self.use_spatial_filter_check = QtWidgets.QCheckBox(self.groupBox)
        self.use_spatial_filter_check.setChecked(False)
        self.use_spatial_filter_check.setObjectName("use_spatial_filter_check")
        self.verticalLayout_4.addWidget(self.use_spatial_filter_check)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setContentsMargins(-1, 0, -1, -1)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.spatial_filter_combo = QgsMapLayerComboBox(self.groupBox)
        self.spatial_filter_combo.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.spatial_filter_combo.sizePolicy().hasHeightForWidth())
        self.spatial_filter_combo.setSizePolicy(sizePolicy)
        self.spatial_filter_combo.setMinimumSize(QtCore.QSize(0, 0))
        self.spatial_filter_combo.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.spatial_filter_combo.setFrame(True)
        self.spatial_filter_combo.setShowCrs(True)
        self.spatial_filter_combo.setObjectName("spatial_filter_combo")
        self.horizontalLayout_4.addWidget(self.spatial_filter_combo)
        self.spatial_selected_only_check = QtWidgets.QCheckBox(self.groupBox)
        self.spatial_selected_only_check.setEnabled(False)
        self.spatial_selected_only_check.setObjectName("spatial_selected_only_check")
        self.horizontalLayout_4.addWidget(self.spatial_selected_only_check)
        self.n_spatial_selected_label = QtWidgets.QLabel(self.groupBox)
        self.n_spatial_selected_label.setText("")
        self.n_spatial_selected_label.setObjectName("n_spatial_selected_label")
        self.horizontalLayout_4.addWidget(self.n_spatial_selected_label)
        self.reload_spatial_button = QtWidgets.QPushButton(self.groupBox)
        self.reload_spatial_button.setEnabled(False)
        self.reload_spatial_button.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("icons/20190619_iconset_mob_wborders_refresh_1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.reload_spatial_button.setIcon(icon2)
        self.reload_spatial_button.setObjectName("reload_spatial_button")
        self.horizontalLayout_4.addWidget(self.reload_spatial_button)
        self.verticalLayout_4.addLayout(self.horizontalLayout_4)
        self.verticalLayout_5.addWidget(self.groupBox)
        self.uuid_group = QgsCollapsibleGroupBox(self.config_request_output_tab)
        self.uuid_group.setToolTip("")
        self.uuid_group.setCollapsed(False)
        self.uuid_group.setSaveCollapsedState(True)
        self.uuid_group.setObjectName("uuid_group")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.uuid_group)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.key_error_label = QtWidgets.QLabel(self.uuid_group)
        self.key_error_label.setStyleSheet("color: red;")
        self.key_error_label.setText("")
        self.key_error_label.setObjectName("key_error_label")
        self.verticalLayout_11.addWidget(self.key_error_label)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.api_key_edit = QtWidgets.QLineEdit(self.uuid_group)
        self.api_key_edit.setObjectName("api_key_edit")
        self.gridLayout_2.addWidget(self.api_key_edit, 0, 1, 1, 1)
        self.api_key_check = QtWidgets.QRadioButton(self.uuid_group)
        self.api_key_check.setChecked(True)
        self.api_key_check.setObjectName("api_key_check")
        self.gridLayout_2.addWidget(self.api_key_check, 0, 0, 1, 1)
        self.api_url_check = QtWidgets.QRadioButton(self.uuid_group)
        self.api_url_check.setObjectName("api_url_check")
        self.gridLayout_2.addWidget(self.api_url_check, 1, 0, 1, 1)
        self.api_url_edit = QtWidgets.QLineEdit(self.uuid_group)
        self.api_url_edit.setEnabled(False)
        self.api_url_edit.setObjectName("api_url_edit")
        self.gridLayout_2.addWidget(self.api_url_edit, 1, 1, 1, 1)
        self.horizontalLayout_10.addLayout(self.gridLayout_2)
        self.reload_UUID_button = QtWidgets.QPushButton(self.uuid_group)
        self.reload_UUID_button.setText("")
        self.reload_UUID_button.setIcon(icon2)
        self.reload_UUID_button.setObjectName("reload_UUID_button")
        self.horizontalLayout_10.addWidget(self.reload_UUID_button)
        self.verticalLayout_11.addLayout(self.horizontalLayout_10)
        self.verticalLayout_5.addWidget(self.uuid_group)
        self.output_fields_group = QgsCollapsibleGroupBox(self.config_request_output_tab)
        self.output_fields_group.setCollapsed(True)
        self.output_fields_group.setSaveCollapsedState(True)
        self.output_fields_group.setObjectName("output_fields_group")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.output_fields_group)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.verticalLayout_5.addWidget(self.output_fields_group)
        self.mGroupBox_2 = QgsCollapsibleGroupBox(self.config_request_output_tab)
        self.mGroupBox_2.setAutoFillBackground(False)
        self.mGroupBox_2.setCollapsed(True)
        self.mGroupBox_2.setObjectName("mGroupBox_2")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.mGroupBox_2)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setContentsMargins(-1, 0, -1, -1)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.selected_features_only_check = QtWidgets.QCheckBox(self.mGroupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.selected_features_only_check.sizePolicy().hasHeightForWidth())
        self.selected_features_only_check.setSizePolicy(sizePolicy)
        self.selected_features_only_check.setMinimumSize(QtCore.QSize(180, 0))
        self.selected_features_only_check.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.selected_features_only_check.setObjectName("selected_features_only_check")
        self.horizontalLayout_5.addWidget(self.selected_features_only_check)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem3)
        self.fuzzy_check = QtWidgets.QCheckBox(self.mGroupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fuzzy_check.sizePolicy().hasHeightForWidth())
        self.fuzzy_check.setSizePolicy(sizePolicy)
        self.fuzzy_check.setObjectName("fuzzy_check")
        self.horizontalLayout_5.addWidget(self.fuzzy_check)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem4)
        self.verticalLayout_9.addLayout(self.horizontalLayout_5)
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setContentsMargins(-1, 0, -1, -1)
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.update_input_layer_check = QtWidgets.QCheckBox(self.mGroupBox_2)
        self.update_input_layer_check.setMinimumSize(QtCore.QSize(180, 0))
        self.update_input_layer_check.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.update_input_layer_check.setObjectName("update_input_layer_check")
        self.horizontalLayout_13.addWidget(self.update_input_layer_check)
        self.verticalLayout_9.addLayout(self.horizontalLayout_13)
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_14.setContentsMargins(-1, 0, -1, -1)
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.label_8 = QtWidgets.QLabel(self.mGroupBox_2)
        self.label_8.setMinimumSize(QtCore.QSize(180, 0))
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_14.addWidget(self.label_8)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem5)
        self.search_and_check = QtWidgets.QRadioButton(self.mGroupBox_2)
        self.search_and_check.setMinimumSize(QtCore.QSize(50, 0))
        self.search_and_check.setObjectName("search_and_check")
        self.horizontalLayout_14.addWidget(self.search_and_check)
        self.search_or_check = QtWidgets.QRadioButton(self.mGroupBox_2)
        self.search_or_check.setMinimumSize(QtCore.QSize(47, 0))
        self.search_or_check.setChecked(True)
        self.search_or_check.setObjectName("search_or_check")
        self.horizontalLayout_14.addWidget(self.search_or_check)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem6)
        self.verticalLayout_9.addLayout(self.horizontalLayout_14)
        spacerItem7 = QtWidgets.QSpacerItem(20, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_9.addItem(spacerItem7)
        self.label_2 = QtWidgets.QLabel(self.mGroupBox_2)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_9.addWidget(self.label_2)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.layer_style_edit = QtWidgets.QLineEdit(self.mGroupBox_2)
        self.layer_style_edit.setReadOnly(True)
        self.layer_style_edit.setObjectName("layer_style_edit")
        self.horizontalLayout_2.addWidget(self.layer_style_edit)
        self.style_browse_button = QtWidgets.QPushButton(self.mGroupBox_2)
        self.style_browse_button.setMaximumSize(QtCore.QSize(30, 16777215))
        self.style_browse_button.setText("")
        self.style_browse_button.setIcon(icon)
        self.style_browse_button.setObjectName("style_browse_button")
        self.horizontalLayout_2.addWidget(self.style_browse_button)
        self.verticalLayout_9.addLayout(self.horizontalLayout_2)
        spacerItem8 = QtWidgets.QSpacerItem(20, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_9.addItem(spacerItem8)
        self.debug_check = QtWidgets.QCheckBox(self.mGroupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.debug_check.sizePolicy().hasHeightForWidth())
        self.debug_check.setSizePolicy(sizePolicy)
        self.debug_check.setMinimumSize(QtCore.QSize(180, 0))
        self.debug_check.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.debug_check.setObjectName("debug_check")
        self.verticalLayout_9.addWidget(self.debug_check)
        self.verticalLayout_5.addWidget(self.mGroupBox_2)
        spacerItem9 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_5.addItem(spacerItem9)
        self.tab_widget.addTab(self.config_request_output_tab, "")
        self.results_tab = QtWidgets.QWidget()
        self.results_tab.setObjectName("results_tab")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.results_tab)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.frame = QtWidgets.QFrame(self.results_tab)
        self.frame.setAutoFillBackground(True)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame.setObjectName("frame")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.log_edit = QtWidgets.QTextEdit(self.frame)
        self.log_edit.setReadOnly(True)
        self.log_edit.setObjectName("log_edit")
        self.verticalLayout_7.addWidget(self.log_edit)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setContentsMargins(-1, 0, -1, -1)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.elapsed_time_label = QtWidgets.QLabel(self.frame)
        self.elapsed_time_label.setObjectName("elapsed_time_label")
        self.horizontalLayout_6.addWidget(self.elapsed_time_label)
        self.progress_bar = QtWidgets.QProgressBar(self.frame)
        self.progress_bar.setProperty("value", 0)
        self.progress_bar.setOrientation(QtCore.Qt.Horizontal)
        self.progress_bar.setInvertedAppearance(False)
        self.progress_bar.setTextDirection(QtWidgets.QProgressBar.TopToBottom)
        self.progress_bar.setObjectName("progress_bar")
        self.horizontalLayout_6.addWidget(self.progress_bar)
        self.verticalLayout_7.addLayout(self.horizontalLayout_6)
        self.verticalLayout_2.addWidget(self.frame)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.attribute_table_button = QtWidgets.QPushButton(self.results_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.attribute_table_button.sizePolicy().hasHeightForWidth())
        self.attribute_table_button.setSizePolicy(sizePolicy)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("icons/20190619_iconset_mob_wborders_specify_2.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.attribute_table_button.setIcon(icon3)
        self.attribute_table_button.setObjectName("attribute_table_button")
        self.gridLayout.addWidget(self.attribute_table_button, 0, 0, 1, 1)
        self.export_csv_button = QtWidgets.QPushButton(self.results_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.export_csv_button.sizePolicy().hasHeightForWidth())
        self.export_csv_button.setSizePolicy(sizePolicy)
        self.export_csv_button.setLayoutDirection(QtCore.Qt.LeftToRight)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("icons/20190619_iconset_mob_wborders_save_1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.export_csv_button.setIcon(icon4)
        self.export_csv_button.setIconSize(QtCore.QSize(16, 16))
        self.export_csv_button.setObjectName("export_csv_button")
        self.gridLayout.addWidget(self.export_csv_button, 2, 2, 1, 1)
        self.inspect_picker_button = QtWidgets.QPushButton(self.results_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.inspect_picker_button.sizePolicy().hasHeightForWidth())
        self.inspect_picker_button.setSizePolicy(sizePolicy)
        self.inspect_picker_button.setStyleSheet("text-align:left;")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("icons/20190619_iconset_mob_wborders_reverse_geocoding_1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.inspect_picker_button.setIcon(icon5)
        self.inspect_picker_button.setCheckable(True)
        self.inspect_picker_button.setAutoRepeat(False)
        self.inspect_picker_button.setAutoExclusive(False)
        self.inspect_picker_button.setObjectName("inspect_picker_button")
        self.gridLayout.addWidget(self.inspect_picker_button, 2, 0, 1, 1)
        self.reverse_picker_button = QtWidgets.QPushButton(self.results_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.reverse_picker_button.sizePolicy().hasHeightForWidth())
        self.reverse_picker_button.setSizePolicy(sizePolicy)
        self.reverse_picker_button.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.reverse_picker_button.setStyleSheet("text-align:left;")
        self.reverse_picker_button.setIcon(icon5)
        self.reverse_picker_button.setCheckable(True)
        self.reverse_picker_button.setAutoRepeat(False)
        self.reverse_picker_button.setAutoExclusive(False)
        self.reverse_picker_button.setObjectName("reverse_picker_button")
        self.gridLayout.addWidget(self.reverse_picker_button, 1, 0, 1, 1)
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem10, 1, 1, 1, 1)
        self.verticalLayout_2.addLayout(self.gridLayout)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setContentsMargins(-1, 0, -1, -1)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.verticalLayout_2.addLayout(self.horizontalLayout_7)
        self.tab_widget.addTab(self.results_tab, "")
        self.verticalLayout.addWidget(self.tab_widget)
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setContentsMargins(12, 12, 12, 6)
        self.horizontalLayout_11.setSpacing(6)
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.help_button = QtWidgets.QPushButton(self.dockWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.help_button.sizePolicy().hasHeightForWidth())
        self.help_button.setSizePolicy(sizePolicy)
        self.help_button.setMinimumSize(QtCore.QSize(0, 0))
        self.help_button.setIcon(icon1)
        self.help_button.setObjectName("help_button")
        self.horizontalLayout_11.addWidget(self.help_button)
        self.about_button = QtWidgets.QPushButton(self.dockWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.about_button.sizePolicy().hasHeightForWidth())
        self.about_button.setSizePolicy(sizePolicy)
        self.about_button.setMinimumSize(QtCore.QSize(0, 0))
        self.about_button.setMaximumSize(QtCore.QSize(16777215, 16777215))
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("icons/20190619_iconset_mob_wborders_info_2.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.about_button.setIcon(icon6)
        self.about_button.setObjectName("about_button")
        self.horizontalLayout_11.addWidget(self.about_button)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_11.addItem(spacerItem11)
        self.request_start_button = QtWidgets.QPushButton(self.dockWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.request_start_button.sizePolicy().hasHeightForWidth())
        self.request_start_button.setSizePolicy(sizePolicy)
        self.request_start_button.setLayoutDirection(QtCore.Qt.LeftToRight)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("icons/20190619_iconset_mob_wborders_start_1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.request_start_button.setIcon(icon7)
        self.request_start_button.setObjectName("request_start_button")
        self.horizontalLayout_11.addWidget(self.request_start_button)
        self.request_stop_button = QtWidgets.QPushButton(self.dockWidgetContents)
        self.request_stop_button.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.request_stop_button.sizePolicy().hasHeightForWidth())
        self.request_stop_button.setSizePolicy(sizePolicy)
        self.request_stop_button.setLayoutDirection(QtCore.Qt.LeftToRight)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("icons/20190619_iconset_mob_wborders_stop_1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.request_stop_button.setIcon(icon8)
        self.request_stop_button.setObjectName("request_stop_button")
        self.horizontalLayout_11.addWidget(self.request_stop_button)
        self.verticalLayout.addLayout(self.horizontalLayout_11)
        MainDockWidget.setWidget(self.dockWidgetContents)

        self.retranslateUi(MainDockWidget)
        self.tab_widget.setCurrentIndex(0)
        self.rs_combo.setCurrentIndex(-1)
        self.use_rs_check.toggled['bool'].connect(self.rs_edit.setEnabled)
        self.use_rs_check.toggled['bool'].connect(self.rs_combo.setEnabled)
        self.use_spatial_filter_check.toggled['bool'].connect(self.spatial_filter_combo.setEnabled)
        self.use_spatial_filter_check.toggled['bool'].connect(self.spatial_selected_only_check.setEnabled)
        self.api_key_check.toggled['bool'].connect(self.api_key_edit.setEnabled)
        self.api_url_check.toggled['bool'].connect(self.api_url_edit.setEnabled)
        QtCore.QMetaObject.connectSlotsByName(MainDockWidget)

    def retranslateUi(self, MainDockWidget):
        _translate = QtCore.QCoreApplication.translate
        MainDockWidget.setWindowTitle(_translate("MainDockWidget", "BKG Geocoder"))
        self.label.setText(_translate("MainDockWidget", "Layer:"))
        self.layer_combo.setToolTip(_translate("MainDockWidget", "<html><head/><body><p>Wählen Sie hier aus den geöffneten Layern die zu geokodierenden Daten aus. </p></body></html>"))
        self.import_csv_button.setToolTip(_translate("MainDockWidget", "<html><head/><body><p>Fügen Sie weitere Daten der QGIS-Layerliste hinzu.</p></body></html>"))
        self.import_csv_button.setText(_translate("MainDockWidget", "Daten laden"))
        self.label_7.setText(_translate("MainDockWidget", "Labelfeld:"))
        self.label_field_combo.setToolTip(_translate("MainDockWidget", "<p>Wählen Sie hier ein Feld des Layers aus, das zum Beschriften der Features in der Karte und den Ergebnisdialogen verwendet wird.</p>"))
        self.label_4.setText(_translate("MainDockWidget", "Encoding: "))
        self.encoding_combo.setToolTip(_translate("MainDockWidget", "<p>Wählen Sie hier die Zeichenkodierung des Layers aus.</p>"))
        self.label_6.setToolTip(_translate("MainDockWidget", "<html><head/><body><p>Ordnen Sie an dieser Stelle den bestehenden Feldern der Eingabedaten per Drop-Down-Menü den entsprechenden Geokodierungs-Parametern zu. </p><p>Sollten in Ihrer Ausgangsdatei der Straßenname und die Hausnummer in einem Feld strukturiert sein, so können Sie dieses Feld mit dem Geokodierungs-Parameter &quot;Straße + Hausnummer&quot; verbinden. Stehen die Werte für Hausnummer und Hausnummernzusatz (z.B. 49a) in der Ausgangsdatei in einem Feld, so ist diese mit dem Geokodierungs-Parameter &quot;Hausnummer&quot; zu verbinden.</p></body></html>"))
        self.label_6.setText(_translate("MainDockWidget", "Zuordnung der Geokodierungs-Parameter"))
        self.frame_2.setToolTip(_translate("MainDockWidget", "<html><head/><body><p>Ordnen Sie an dieser Stelle den bestehenden Feldern der Eingabedaten per Drop-Down-Menü den entsprechenden Geokodierungs-Parametern zu. </p><p>Sollten in Ihrer Ausgangsdatei der Straßenname und die Hausnummer in einem Feld strukturiert sein, so können Sie dieses Feld mit dem Geokodierungs-Parameter &quot;Straße + Hausnummer&quot; verbinden. Stehen die Werte für Hausnummer und Hausnummernzusatz (z.B. 49a) in der Ausgangsdatei in einem Feld, so ist diese mit dem Geokodierungs-Parameter &quot;Hausnummer&quot; zu verbinden.</p></body></html>"))
        self.label_3.setText(_translate("MainDockWidget", "Feldname"))
        self.label_5.setText(_translate("MainDockWidget", "Zuordnung Geocoder"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.inputdata_tab), _translate("MainDockWidget", "Eingabedaten"))
        self.groupBox_2.setTitle(_translate("MainDockWidget", "Koordinatenbezugssystem:"))
        self.output_projection_combo.setToolTip(_translate("MainDockWidget", "<p>Hier können Sie das gewünschte Ziel-Koordinatensystem angeben, in welches geokodiert werden soll.</p>"))
        self.groupBox.setTitle(_translate("MainDockWidget", "Filter"))
        self.use_rs_check.setToolTip(_translate("MainDockWidget", "Aktivierung/Deaktivierung des Filters über den Regionalschlüssel"))
        self.use_rs_check.setText(_translate("MainDockWidget", "Regionalschlüssel:"))
        self.rs_error_label.setText(_translate("MainDockWidget", "Der eingegebene Regionalschlüssel ist nicht gültig"))
        self.rs_edit.setToolTip(_translate("MainDockWidget", "<p>In diesem Feld kann der Regionalschlüssel als Filter zur regionalen Eingrenzung des Suchgebietes eingegeben werden.</p><p>Dies führt in der Folge dazu, dass nur Treffer innerhalb des gewählten Verwaltungsgebietes (z.B. Bundesland, Kreis, Gemeinde) gefunden werden können.</p>"))
        self.rs_combo.setToolTip(_translate("MainDockWidget", "<html><head/><body><p>Filtern Sie die Suche nach Bundesländern. </p><p>Die Auswahl fügt die Kennzahl des gewählten Bundeslandes in nebenstehendes Textfeld ein.</p></body></html>"))
        self.rsinfo_button.setToolTip(_translate("MainDockWidget", "<html><head/><body><p>Präzise Informationen zur Suche mit Regionalschlüsseln.</p></body></html>"))
        self.use_spatial_filter_check.setToolTip(_translate("MainDockWidget", "Aktivierung/Deaktivierung des räumlichen Filters"))
        self.use_spatial_filter_check.setText(_translate("MainDockWidget", "Räumlicher Filter:"))
        self.spatial_filter_combo.setToolTip(_translate("MainDockWidget", "<html><head/><body><p>Wählen Sie einen Polygonlayer, auf dessen Grenzen die Suche beschränkt werden soll.</p></body></html>"))
        self.spatial_selected_only_check.setToolTip(_translate("MainDockWidget", "<html><head/><body><p>Beschränken Sie die Suche weiter auf lediglich die selektierten Objekte des gewählten Layers.</p></body></html>"))
        self.spatial_selected_only_check.setText(_translate("MainDockWidget", "nur selektierte \n"
"Objekte nutzen"))
        self.reload_spatial_button.setToolTip(_translate("MainDockWidget", "<p>Überprüfung des räumlichen Filters.</p>"))
        self.uuid_group.setTitle(_translate("MainDockWidget", "Zugangsdaten"))
        self.api_key_edit.setToolTip(_translate("MainDockWidget", "<p>Zur Geokodierung mit dem Plugin BKGGeocoder benötigen sie einen gültigen Nutzer/-innen Identifikator (UUID).</p><p>Geben Sie hier die UUID an.</p>"))
        self.api_key_check.setToolTip(_translate("MainDockWidget", "<p>Zur Geokodierung mit dem Plugin BKGGeocoder benötigen sie einen gültigen Nutzer/-innen Identifikator (UUID).</p><p>Geben Sie hier die UUID an.</p>"))
        self.api_key_check.setText(_translate("MainDockWidget", "BKG UUID"))
        self.api_url_check.setToolTip(_translate("MainDockWidget", "<p>Zur Geokodierung mit dem Plugin BKGGeocoder benötigen sie einen gültigen Nutzer/-innen Identifikator (UUID).</p><p>Geben Sie hier die Dienst-URL inclusive der UUID an.</p>"))
        self.api_url_check.setText(_translate("MainDockWidget", "BKG Dienst-URL inkl. UUID"))
        self.api_url_edit.setToolTip(_translate("MainDockWidget", "<p>Zur Geokodierung mit dem Plugin BKGGeocoder benötigen sie einen gültigen Nutzer/-innen Identifikator (UUID).</p><p>Geben Sie hier die Dienst-URL inclusive der UUID an.</p>"))
        self.reload_UUID_button.setToolTip(_translate("MainDockWidget", "<p>Überprüfung der aktuell eingestellten UUID/Dienst-URL.</p>"))
        self.output_fields_group.setToolTip(_translate("MainDockWidget", "<p>Hier können zusätzlich zu den Standardergebnissen weitere Ergebnisfelder ausgewählt werden, die dem Ergebnislayer hinzugefügt werden.</p><p>Die Änderungen werden erst ab der nächsten Anfrage gültig.</p>"))
        self.output_fields_group.setTitle(_translate("MainDockWidget", "Zusätzliche Ergebnisfelder"))
        self.mGroupBox_2.setToolTip(_translate("MainDockWidget", "<p>Nehmen Sie hier erweiterte Einstellungen vor.</p>"))
        self.mGroupBox_2.setTitle(_translate("MainDockWidget", "Expertenmodus"))
        self.selected_features_only_check.setToolTip(_translate("MainDockWidget", "<p>Geokodieren Sie lediglich die ausgewählten Objekte des Quelllayers</p>"))
        self.selected_features_only_check.setText(_translate("MainDockWidget", "nur selektierte Features nutzen"))
        self.fuzzy_check.setToolTip(_translate("MainDockWidget", "<html><head/><body><p>Eine unscharfe Suche erlaubt eine tolerante Suche basierend auf dem Levenshtein (Edit) Distanz Algorithmus.</p></body></html>"))
        self.fuzzy_check.setText(_translate("MainDockWidget", "unscharfe Suche"))
        self.update_input_layer_check.setToolTip(_translate("MainDockWidget", "<p>Dies bietet Ihnen die Möglichkeit, die Ergebnisse direkt in den Ausgangslayer zu schreiben. </p><p>Bei Treffern werden hierbei die Quellfeatures überschrieben.</p><p>Die Option ist nur verfügbar, wenn der gewählte Layer eine Punktgeometrie enthält.</p>"))
        self.update_input_layer_check.setText(_translate("MainDockWidget", "Ausgangslayer aktualisieren"))
        self.label_8.setToolTip(_translate("MainDockWidget", "<html><head/><body><p>Verknüpfung der Suchterme mittels der logischen Operatoren AND oder OR. </p><p>Bei AND müssen alle Suchbegriffe gefunden werden<span style=\" font-family:\'Calibri,sans-serif\'; font-size:11pt; font-style:italic;\">, bei OR mindestens einer der Suchbegriffe</span>. </p><p>Der Standard ist OR.</p></body></html>"))
        self.label_8.setText(_translate("MainDockWidget", "Verknüpfung der Suchterme:"))
        self.search_and_check.setToolTip(_translate("MainDockWidget", "<html><head/><body><p>Verknüpfung der Suchterme mittels der logischen Operatoren AND oder OR. </p><p>Bei AND müssen alle Suchbegriffe gefunden werden<span style=\" font-family:\'Calibri,sans-serif\'; font-size:11pt; font-style:italic;\">, bei OR mindestens einer der Suchbegriffe</span>. </p><p>Der Standard ist OR.</p></body></html>"))
        self.search_and_check.setText(_translate("MainDockWidget", "AND"))
        self.search_or_check.setToolTip(_translate("MainDockWidget", "<html><head/><body><p>Verknüpfung der Suchterme mittels der logischen Operatoren AND oder OR. </p><p>Bei AND müssen alle Suchbegriffe gefunden werden<span style=\" font-family:\'Calibri,sans-serif\'; font-size:11pt; font-style:italic;\">, bei OR mindestens einer der Suchbegriffe</span>. </p><p>Der Standard ist OR.</p></body></html>"))
        self.search_or_check.setText(_translate("MainDockWidget", "OR"))
        self.label_2.setText(_translate("MainDockWidget", "Anzeigestil der Ergebnislayer"))
        self.layer_style_edit.setToolTip(_translate("MainDockWidget", "<p>Wählen Sie hier einen Stil aus, der die Darstellung der Ergebnisse auf der Karte und in der Attributtabelle bestimmt.</p> <p> Bei den Stilen handelt es sich aus QGIS exportierte qml-Dateien. Sie können auch eigene Stile auf Basis der vorgegebenen Stile erstellen und nutzen.</p>"))
        self.style_browse_button.setToolTip(_translate("MainDockWidget", "<p>Wählen Sie hier einen Stil aus, der die Darstellung der Ergebnisse auf der Karte und in der Attributtabelle bestimmt.</p> <p> Bei den Stilen handelt es sich aus QGIS exportierte qml-Dateien. Sie können auch eigene Stile auf Basis der vorgegebenen Stile erstellen und nutzen.</p>"))
        self.debug_check.setToolTip(_translate("MainDockWidget", "<p>Bei aktiviertem Debugmodus werden zusätzliche Nachrichten im QGIS-Protokoll angezeigt. (Knopf \"Meldungen\" ganz rechts unten im QGIS-Interface)</p>"))
        self.debug_check.setText(_translate("MainDockWidget", "Debugmodus"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.config_request_output_tab), _translate("MainDockWidget", "Anfrage/Ausgabe konfigurieren"))
        self.elapsed_time_label.setText(_translate("MainDockWidget", "00:00:00"))
        self.attribute_table_button.setToolTip(_translate("MainDockWidget", "<html><head/><body><p>Lassen Sie sich eine Tabelle mit den entsprechenden Geokodierungsergebnissen und Eingangswerten anzeigen (Attributtabelle des Ergebnislayers).</p><p>In der Tabelle haben Sie die Möglichkeit die Informationen zu sortieren, nach Informationen zu suchen, Informationen zu bearbeiten und Informationen zu markieren und auf deren Position in der Karte zu springen.</p></body></html>"))
        self.attribute_table_button.setText(_translate("MainDockWidget", "Ergebnistabelle anzeigen"))
        self.export_csv_button.setToolTip(_translate("MainDockWidget", "<html><head/><body><p>Sichern Sie Ihre Ergebnisse in Ihrem gewünschten Dateiformat.</p></body></html>"))
        self.export_csv_button.setText(_translate("MainDockWidget", "Ergebnisse speichern"))
        self.inspect_picker_button.setToolTip(_translate("MainDockWidget", "<html><head/><body><p>Gibt es für ein Objekt mehrere Treffer, so können Sie sich hier die Treffer mit geringerer Güte anzeigen lassen und ggf. einen der Treffer übernehmen. </p></body></html>"))
        self.inspect_picker_button.setText(_translate("MainDockWidget", "Ergebnisse inspizieren"))
        self.reverse_picker_button.setToolTip(_translate("MainDockWidget", "<html><head/><body><p>Mit diesem Tool können Sie die vom BKGGeocoder automatisch ermittelte Position bzw. zugewiesenen Adressangaben manuell verändern. </p><p>Nach dem manuellen Verschieben eines Objektes, wird Ihnen ein PopUp-Fenster mit den fünf nächstgelegenen Adressen und die dazugehörige Symbole in der Kartenansicht angezeigt.</p></body></html>"))
        self.reverse_picker_button.setText(_translate("MainDockWidget", "Nachbaradresssuche"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.results_tab), _translate("MainDockWidget", "Ergebnis"))
        self.help_button.setToolTip(_translate("MainDockWidget", "Zeigt die Hilfe an."))
        self.help_button.setText(_translate("MainDockWidget", "Hilfe"))
        self.about_button.setToolTip(_translate("MainDockWidget", "Über BKG-Geocoder"))
        self.about_button.setText(_translate("MainDockWidget", "Über"))
        self.request_start_button.setToolTip(_translate("MainDockWidget", "<p>Starten Sie die Anfrage mit den getroffenen Konfigurationen. </p><p>Ihre ausgewählten Daten werden hierbei dem BKG übermittelt. Bitte beachten Sie, dass diese – abhängig von Ihrer Auswahl – auch personenbezogene Daten umfassen können.</p>"))
        self.request_start_button.setText(_translate("MainDockWidget", "Anfrage starten"))
        self.request_stop_button.setToolTip(_translate("MainDockWidget", "<p>Stoppen Sie die Anfrage.</p><p>Bereits erzielte Ergebnisse bleiben dabei erhalten.</p>"))
        self.request_stop_button.setText(_translate("MainDockWidget", "Anfrage stoppen"))
from qgscollapsiblegroupbox import QgsCollapsibleGroupBox
from qgsmaplayercombobox import QgsMapLayerComboBox
